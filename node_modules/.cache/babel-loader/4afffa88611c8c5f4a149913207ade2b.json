{"ast":null,"code":"import { swap } from \"../Helpers/Swap.js\";\nexport function heapSort(array, animation) {\n  var size = array.length;\n\n  for (let i = Math.floor(size / 2) - 1; i >= 0; i--) {\n    heapify(array, size, i, animation);\n  }\n\n  for (let i = size - 1; i > 0; i--) {\n    animation.push([1, i, 0]);\n    swap(array, i, 0);\n    heapify(array, i, 0, animation);\n  }\n}\n\nfunction heapify(array, size, i, animation) {\n  var largest = i;\n  var left = 2 * i + 1;\n  var right = 2 * i + 2;\n\n  if (left < size && array[left] > array[largest]) {\n    largest = left;\n  }\n\n  if (right < size && array[right] > array[largest]) {\n    largest = right;\n  }\n\n  animation.push([0, i, largest]);\n\n  if (largest !== i) {\n    animation[animation.length - 1][0] = 1;\n    swap(array, i, largest);\n    heapify(array, size, largest, animation);\n  }\n}","map":{"version":3,"names":["swap","heapSort","array","animation","size","length","i","Math","floor","heapify","push","largest","left","right"],"sources":["/Users/yuhengding/sorting_visualization/src/SortingVisualizer/SortingAlgorithms/HeapSort.js"],"sourcesContent":["import { swap } from \"../Helpers/Swap.js\";\n\nexport function heapSort(array, animation){\n    var size = array.length;\n    for(let i = Math.floor(size / 2) - 1; i >= 0; i--){\n        heapify(array, size, i, animation);\n    }\n    for(let i = size - 1; i > 0; i--){\n        animation.push([1, i, 0]);\n        swap(array, i, 0);\n        heapify(array, i, 0, animation);\n    }\n}\n\nfunction heapify(array, size, i, animation){\n    var largest = i;\n    var left = 2 * i + 1;\n    var right = 2 * i + 2;\n\n    if(left < size && array[left] > array[largest]){\n        largest = left;\n    }\n    if(right < size && array[right] > array[largest]){\n        largest = right;\n    }\n\n    animation.push([0, i, largest]);\n    if(largest !== i){\n        animation[animation.length - 1][0] = 1;\n        swap(array, i, largest);\n        heapify(array, size, largest, animation);\n    }\n}"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,SAAzB,EAAmC;EACtC,IAAIC,IAAI,GAAGF,KAAK,CAACG,MAAjB;;EACA,KAAI,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,CAAlB,IAAuB,CAAnC,EAAsCE,CAAC,IAAI,CAA3C,EAA8CA,CAAC,EAA/C,EAAkD;IAC9CG,OAAO,CAACP,KAAD,EAAQE,IAAR,EAAcE,CAAd,EAAiBH,SAAjB,CAAP;EACH;;EACD,KAAI,IAAIG,CAAC,GAAGF,IAAI,GAAG,CAAnB,EAAsBE,CAAC,GAAG,CAA1B,EAA6BA,CAAC,EAA9B,EAAiC;IAC7BH,SAAS,CAACO,IAAV,CAAe,CAAC,CAAD,EAAIJ,CAAJ,EAAO,CAAP,CAAf;IACAN,IAAI,CAACE,KAAD,EAAQI,CAAR,EAAW,CAAX,CAAJ;IACAG,OAAO,CAACP,KAAD,EAAQI,CAAR,EAAW,CAAX,EAAcH,SAAd,CAAP;EACH;AACJ;;AAED,SAASM,OAAT,CAAiBP,KAAjB,EAAwBE,IAAxB,EAA8BE,CAA9B,EAAiCH,SAAjC,EAA2C;EACvC,IAAIQ,OAAO,GAAGL,CAAd;EACA,IAAIM,IAAI,GAAG,IAAIN,CAAJ,GAAQ,CAAnB;EACA,IAAIO,KAAK,GAAG,IAAIP,CAAJ,GAAQ,CAApB;;EAEA,IAAGM,IAAI,GAAGR,IAAP,IAAeF,KAAK,CAACU,IAAD,CAAL,GAAcV,KAAK,CAACS,OAAD,CAArC,EAA+C;IAC3CA,OAAO,GAAGC,IAAV;EACH;;EACD,IAAGC,KAAK,GAAGT,IAAR,IAAgBF,KAAK,CAACW,KAAD,CAAL,GAAeX,KAAK,CAACS,OAAD,CAAvC,EAAiD;IAC7CA,OAAO,GAAGE,KAAV;EACH;;EAEDV,SAAS,CAACO,IAAV,CAAe,CAAC,CAAD,EAAIJ,CAAJ,EAAOK,OAAP,CAAf;;EACA,IAAGA,OAAO,KAAKL,CAAf,EAAiB;IACbH,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAAT,CAAgC,CAAhC,IAAqC,CAArC;IACAL,IAAI,CAACE,KAAD,EAAQI,CAAR,EAAWK,OAAX,CAAJ;IACAF,OAAO,CAACP,KAAD,EAAQE,IAAR,EAAcO,OAAd,EAAuBR,SAAvB,CAAP;EACH;AACJ"},"metadata":{},"sourceType":"module"}